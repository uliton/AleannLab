{"version":3,"sources":["api.js","components/Job/Job.tsx","components/Main/Main.tsx","components/NotFound/NotFound.jsx","App.tsx","index.tsx"],"names":["getJobList","fetch","responce","json","Error","Job","info","console","log","className","Main","useState","jobList","setJobList","useEffect","then","result","error","mockData","map","job","id","NotFound","App","path","element","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0z0BAGaA,EAAU,iDAAG,uHAECC,MAAM,GAAD,OALhB,6DAK2B,yBAJtB,6CAIuD,KAAD,EAAzD,OAARC,EAAQ,yBAEPA,EAASC,QAAM,sCAGhB,IAAIC,MAAQ,KAAD,oDAEpB,kBATsB,mC,uBCIVC,EAAuB,SAAH,GAAkB,IAAZC,EAAI,EAAJA,KAGrC,OAFAC,QAAQC,IAAIF,GAGV,qBAAKG,UAAU,MAAK,gBAIxB,ECVaC,EAAiB,WAC5B,MAA+BC,mBAAgB,IAAG,mBAA3CC,EAAO,KAAGC,EAAU,KAc3B,OAZFC,qBAAU,WACRd,IAAae,MAAK,SAAAC,GACZA,GACFH,EAAWG,GAGTA,EAAOC,OACTJ,EAAWK,EAEf,GACF,GAAG,IAGC,qBAAKT,UAAU,OAAM,SACnB,oBAAIA,UAAU,aAAY,SACvBG,EAAQO,KAAI,SAAAC,GAAG,OACd,oBAAiBX,UAAU,aAAY,SACrC,cAAC,EAAG,CAACH,KAAMc,KADJA,EAAIC,GAER,OAKf,EC7BaC,EAAW,WAAH,OACnB,qBAAKb,UAAU,WAAU,4BAEnB,ECAKc,EAAgB,WAAH,OACxB,qBAAKd,UAAU,MAAK,SAClB,eAAC,IAAM,WACL,cAAC,IAAK,CAACe,KAAK,IAAIC,QAAS,cAAC,EAAI,MAC9B,cAAC,IAAK,CAACD,KAAK,QAAQC,QAAS,cAAC,EAAI,MAClC,cAAC,IAAK,CAACD,KAAK,IAAIC,QAAS,cAAC,EAAQ,UAEhC,E,cCNRC,IAASC,OACP,cAAC,IAAMC,WAAU,UACf,cAAC,IAAU,UACT,cAAC,EAAG,QAGRC,SAASC,eAAe,Q","file":"static/js/main.da7433c2.chunk.js","sourcesContent":["const URL_API = 'https://api.json-generator.com/templates/ZM1r0eic3XEy/data';\nconst access_token = \"wm3gg940gy0xek1ld98uaizhz83c6rh2sir9f9fu\";\n\nexport const getJobList = async () => {\n  try {\n    const responce = await fetch(`${URL_API}?access_token=${access_token}`);\n\n    return responce.json();\n  }\n  catch {\n    throw new Error();\n  }\n}\n","import React from \"react\";\nimport \"./Job.scss\";\n\ntype Props = {\n  info: Job,\n}\n\nexport const Job: React.FC<Props> = ({ info }) => {\n  console.log(info);\n\n  return (\n    <div className=\"job\">\n      Job\n    </div>\n  )\n}","import React, { useEffect, useState } from \"react\";\nimport { getJobList } from \"../../api\";\nimport mockData from \"../../mock.json\";\nimport { Job } from \"../Job/Job\";\n\nexport const Main: React.FC = () => {\n  const [jobList , setJobList] = useState<Job[]>([]);\n\nuseEffect(() => {\n  getJobList().then(result => {\n    if (result) {\n      setJobList(result);\n    }\n\n    if (result.error) {\n      setJobList(mockData);\n    }\n  });\n}, []);\n\n  return (\n    <div className=\"main\">\n      <ul className=\"main__list\">\n        {jobList.map(job => (\n          <li key={job.id} className=\"main__item\">\n            <Job info={job} />\n          </li>\n        ))}\n      </ul>\n    </div>\n  )\n}\n","import React from \"react\";\n\nexport const NotFound = () => (\n  <div className=\"notFound\">\n    Page Not Found!\n  </div>\n);\n","import React from \"react\";\nimport { Route, Routes } from \"react-router\";\nimport { Main } from \"./components/Main\";\nimport { NotFound } from \"./components/NotFound\";\n\nexport const App: React.FC = () => (\n  <div className=\"app\">\n    <Routes>\n      <Route path=\"/\" element={<Main />} />\n      <Route path=\"/main\" element={<Main />} />\n      <Route path=\"*\" element={<NotFound />} />\n    </Routes>\n  </div>\n);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { App } from './App';\nimport { HashRouter } from 'react-router-dom';\nimport './index.scss';\n\nReactDOM.render(\n  <React.StrictMode>\n    <HashRouter>\n      <App />\n    </HashRouter>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}